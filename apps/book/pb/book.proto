syntax = "proto3";

package apps.book;
// 第一个为生成的目录，第二个为包名
option go_package = "apps/book;book";

//导入其他包
import "common/pb/page/page.proto";
import "common/pb/request/request.proto";

service Service {
  rpc CreateBook(CreateBookRequest) returns(Book);
  rpc QueryBook(QueryBookRequest) returns(BookSet);
  rpc DescribeBook(DescribeBookRequest) returns(Book);
  rpc UpdateBook(UpdateBookRequest) returns(Book);
  rpc DeleteBook(DeleteBookRequest) returns(Book);
}


// Book todo
message Book {
  // 唯一ID
  // @gotags: json:"id"
  string id = 1;
  // 录入时间
  // @gotags: json:"create_at" wdf:"wds"
  int64 create_at = 2;
  // 更新时间
  // @gotags: json:"update_at"
  int64 update_at = 3;
  // 更新人
  // @gotags: json:"update_by"
  string update_by = 4;
  // 书本信息
  // @gotags: json:"data"
  CreateBookRequest data = 5;
}

message CreateBookRequest {
  // 创建人
  // @gotags: json:"create_by"
  string create_by = 1;
  // 名称
  // @gotags: json:"name" validate:"required"
  string name = 2;
  // 作者
  // @gotags: json:"author" validate:"required"
  string author = 3;
}

message QueryBookRequest {
  // 分页参数
  // @gotags: json:"page"
  common.pb.page.PageRequest page = 1;
  // 关键字参数
  // @gotags: json:"keywords"
  string keywords = 2;
}

// BookSet todo
message BookSet {
  // 分页时，返回总数量
  // @gotags: json:"total"
  int64 total = 1;
  // 一页的数据
  // @gotags: json:"items"
  repeated Book items = 2;
}

message DescribeBookRequest {
  // book id
  // @gotags: json:"id"
  string id = 1;
}

message UpdateBookRequest {
  // book id
  // @gotags: json:"id"
  string id = 1;
  // 更新模式
  // @gotags: json:"update_mode"
  common.pb.request.UpdateMode update_mode = 2;
  // 更新人
  // @gotags: json:"update_by"
  string update_by = 3;
  // 更新时间
  // @gotags: json:"update_at"
  int64 update_at = 4;
  // 更新的书本信息
  // @gotags: json:"data"
  CreateBookRequest data = 5;
}

message DeleteBookRequest {
  // book id
  // @gotags: json:"id"
  string id = 1;
}